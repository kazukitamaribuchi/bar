name: Docker Image CI

on:
  push:
    branches: [ "master" ]

# env:
#   SECRET_KEY: ${{ secrets.SECRET_KEY }}
#   NODE_ENV: production
#   VUE_APP_AUTH_REDIRECT_URI: ${{ secrets.VUE_APP_AUTH_REDIRECT_URI }}

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 7
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: create env
        run: | #
          touch web/.env
          echo "NODE_ENV=production" >> web/.env
          echo "VUE_APP_AUTH_REDIRECT_URI=${{ secrets.VUE_APP_AUTH_REDIRECT_URI }}" >> web/.env
          echo "VUE_APP_DEV_REDIS_URL=${{ secrets.VUE_APP_DEV_REDIS_URL }}" >> web/.env
          touch api/.env
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> api/.env
          echo "DJANGO_ENV=production" >> api/.env
          echo "CLOUD_NAME=${{ secrets.CLOUD_NAME }}" >> api/.env
          echo "CLOUDINARY_API_KEY=${{ secrets.CLOUDINARY_API_KEY }}" >> api/.env
          echo "CLOUDINARY_API_SECRET=${{ secrets.CLOUDINARY_API_SECRET }}" >> api/.env
          cat web/.env
          cat api/.env
      - name: yarn build
        run: | #
          ls
          cd web
          docker build .
          rm -rf node_modules package-lock.json && npm install
          yarn build
          docker ps
      - name: check dist
        run: | #
          cd web/dist
          ls
      - name: check dist static
        run: | #
          cd web/dist/static
          ls
      - name: move files
        run: | #
          mv web/dist/templates/index.html api/templates
          mv web/dist/static/css api/staticfiles/
          mv web/dist/static/fonts api/staticfiles/
          mv web/dist/static/img api/staticfiles/
          mv web/dist/static/js api/staticfiles/
          cd api
          ls
      - name: check static
        run: | #
          cd api/staticfiles
          ls
      - name: collect static
        run: | #
          cd api
          docker build -f Dockerfile_actions .
          ls
          pip install --upgrade pip
          pip install -r requirements.txt
          python3 manage.py collectstatic
      - name: heroku release
        uses: akhileshns/heroku-deploy@v3.12.12
        with:
            heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
            heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}
            heroku_email: ${{ secrets.HEROKU_EMAIL }}
            usedocker: true

  # test:
  # deploy:
  #   needs:
  #     - build
  #     # - test
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 7
  #   steps:
  #     - name: checkout
  #       uses: actions/checkout@v3
  #     - name: heroku deploy
  #       uses: akhileshns/heroku-deploy@v3.12.12
  #       with:
  #         heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
  #         heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}
  #         heroku_email: ${{ secrets.HEROKU_EMAIL }}
  #         usedocker: true
  #         docker_build_args: |
  #           NODE_ENV
  #       env:
  #         NODE_ENV: production
  #         # SECRET_KEY: ${{ secrets.MY_SECRET_KEY }}
  #     - name: deploy
  #       runs: | #
  #         ls
  #         cd web
  #         ls
  #         cd dist
  #         ls
